{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      url,\n      headers\n    } = _ref;\n    this._url = url;\n    this._headers = headers;\n  }\n  _getServerAnswer(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  getInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(this._getServerAnswer);\n  }\n  getCards() {\n    return fetch(`${this._url}/cards`, {\n      method: \"GET\",\n      headers: this._headers\n    }).then(this._getServerAnswer);\n  }\n  setInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(this._getServerAnswer);\n  }\n  postCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._getServerAnswer);\n  }\n  deleteCards(cardID) {\n    return fetch(`${this._url}/cards/${cardID}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._getServerAnswer);\n  }\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: `${!isLiked ? \"DELETE\" : \"PUT\"}`,\n      headers: this._headers\n    }).then(this._getServerAnswer);\n  }\n  changeAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._getServerAnswer);\n  }\n}\nexport const api = new Api({\n  url: 'https://api.mariatektova.students.nomoredomains.rocks',\n  headers: {\n    'Content-Type': 'application/json',\n    authorization: `Bearer ${localStorage.getItem('jwt')}`\n  }\n});","map":{"version":3,"names":["Api","constructor","url","headers","_url","_headers","_getServerAnswer","res","ok","json","Promise","reject","status","getInfo","fetch","method","then","getCards","setInfo","data","body","JSON","stringify","name","about","postCard","link","deleteCards","cardID","changeLikeCardStatus","cardId","isLiked","changeAvatar","avatar","api","authorization","localStorage","getItem"],"sources":["/Users/mariatektova/Documents/верстка/react-mesto-api-full-gha/frontend/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor({ url, headers }) {\n    this._url = url;\n    this._headers = headers;\n  }\n\n  _getServerAnswer(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getInfo() {\n    return fetch(`${this._url}/users/me`, {\n      method: \"GET\",\n      headers: this._headers,\n    }).then(this._getServerAnswer);\n  }\n  getCards() {\n    return fetch(`${this._url}/cards`, {\n      method: \"GET\",\n      headers: this._headers,\n    }).then(this._getServerAnswer);\n  }\n\n  setInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n      }),\n    }).then(this._getServerAnswer);\n  }\n  postCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link,\n      }),\n    }).then(this._getServerAnswer);\n  }\n  deleteCards(cardID) {\n    return fetch(`${this._url}/cards/${cardID}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._getServerAnswer);\n  }\n  changeLikeCardStatus(cardId, isLiked) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: `${!isLiked ? \"DELETE\" : \"PUT\"}`,\n      headers: this._headers,\n    }).then(this._getServerAnswer);\n  }\n\n  changeAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar,\n      }),\n    }).then(this._getServerAnswer);\n  }\n}\n  export const api = new Api({\n    url: 'https://api.mariatektova.students.nomoredomains.rocks',\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${localStorage.getItem('jwt')}`,\n    },\n  });\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}