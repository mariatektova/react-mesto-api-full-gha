{"ast":null,"code":"export var BASE_URL='https://api.mariatektova.students.nomoredomains.rocks';var checkResponse=function checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"Error: \".concat(res.status));};export var checkToken=function checkToken(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:\"GET\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(token)}}).then(function(res){return checkResponse(res);});};export var register=function register(email,password){return fetch(\"\".concat(BASE_URL,\"/sign-up\"),{method:\"POST\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"},body:JSON.stringify({email:email,password:password})}).then(function(res){return checkResponse(res);});};export var authorize=function authorize(email,password){return fetch(\"\".concat(BASE_URL,\"/sign-in\"),{method:\"POST\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"},body:JSON.stringify({email:email,password:password})}).then(function(res){return checkResponse(res);});};","map":{"version":3,"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","status","checkToken","token","fetch","method","headers","Accept","Authorization","then","register","email","password","body","JSON","stringify","authorize"],"sources":["/Users/mariatektova/Documents/верстка/react-mesto-api-full-gha/frontend/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = 'https://api.mariatektova.students.nomoredomains.rocks';\nconst checkResponse = (res) => {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Error: ${res.status}`);\n};\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  }).then((res) => checkResponse(res));\n};\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/sign-up`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ email, password }),\n  }).then((res) => checkResponse(res));\n};\n\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/sign-in`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ email, password }),\n  }).then((res) => checkResponse(res));\n};\n"],"mappings":"AAAA,MAAO,IAAMA,SAAQ,CAAG,uDAAuD,CAC/E,GAAMC,cAAa,CAAG,QAAhBA,cAAa,CAAIC,GAAG,CAAK,CAC7B,GAAIA,GAAG,CAACC,EAAE,CAAE,CACV,MAAOD,IAAG,CAACE,IAAI,EAAE,CACnB,CACA,MAAOC,QAAO,CAACC,MAAM,kBAAWJ,GAAG,CAACK,MAAM,EAAG,CAC/C,CAAC,CACD,MAAO,IAAMC,WAAU,CAAG,QAAbA,WAAU,CAAIC,KAAK,CAAK,CACnC,MAAOC,MAAK,WAAIV,QAAQ,cAAa,CACnCW,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACPC,MAAM,CAAE,kBAAkB,CAC1B,cAAc,CAAE,kBAAkB,CAClCC,aAAa,kBAAYL,KAAK,CAChC,CACF,CAAC,CAAC,CAACM,IAAI,CAAC,SAACb,GAAG,QAAKD,cAAa,CAACC,GAAG,CAAC,GAAC,CACtC,CAAC,CAED,MAAO,IAAMc,SAAQ,CAAG,QAAXA,SAAQ,CAAIC,KAAK,CAAEC,QAAQ,CAAK,CAC3C,MAAOR,MAAK,WAAIV,QAAQ,aAAY,CAClCW,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACPC,MAAM,CAAE,kBAAkB,CAC1B,cAAc,CAAE,kBAClB,CAAC,CACDM,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEJ,KAAK,CAALA,KAAK,CAAEC,QAAQ,CAARA,QAAS,CAAC,CAC1C,CAAC,CAAC,CAACH,IAAI,CAAC,SAACb,GAAG,QAAKD,cAAa,CAACC,GAAG,CAAC,GAAC,CACtC,CAAC,CAED,MAAO,IAAMoB,UAAS,CAAG,QAAZA,UAAS,CAAIL,KAAK,CAAEC,QAAQ,CAAK,CAC5C,MAAOR,MAAK,WAAIV,QAAQ,aAAY,CAClCW,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACPC,MAAM,CAAE,kBAAkB,CAC1B,cAAc,CAAE,kBAClB,CAAC,CACDM,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEJ,KAAK,CAALA,KAAK,CAAEC,QAAQ,CAARA,QAAS,CAAC,CAC1C,CAAC,CAAC,CAACH,IAAI,CAAC,SAACb,GAAG,QAAKD,cAAa,CAACC,GAAG,CAAC,GAAC,CACtC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}